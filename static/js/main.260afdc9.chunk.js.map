{"version":3,"sources":["util/constants.js","components/Card.js","util/hooks.js","components/DummyCard.js","components/Deck.js","components/Bar.js","components/Stats.js","game/GameWorld.js","components/Game.js","data/default/event-cards.js","data/default/cards.js","data/default/events.js","App.js","index.js"],"names":["SWIPE_DIRECTION","trans","r","s","getThreshold","Math","min","window","innerWidth","Card","keys","callback","i","cardData","onSwipe","layer","title","distance","text","image","useSpring","x","y","scale","rot","delay","to","from","cardAnimationState","setCardAnimationState","useState","isGone","currentKey","cardState","gestureControl","args","down","xDelta","delta","velocity","direction","trigger","abs","devicePixelRatio","dir","sign","setTimeout","undefined","config","friction","tension","key","directionX","useEffect","downHandler","event","includes","upHandler","addEventListener","removeEventListener","bind","useGesture","div","className","style","position","transform","interpolate","zIndex","backgroundImage","DummyCard","transition","loopingIndex","index","length","tick","Deck","card","cardStack","Array","apply","map","_","list","sin","id","Container","styled","Value","getBarColor","value","Bar","width","backgroundColor","header","Stat","Icon","Stats","stats","IconWidget","GameIcons","icon","IoIcons","FeatherIcons","iconSize","size","Footer","footer","Game","state","getInitialState","this","addUniqueCardId","worldState","world","props","worldData","stat","Object","assign","rounds","defaultState","getInitialCard","availableEvents","getAvailableEvents","selectNextEvent","selectEventCard","initialEventCardId","selectNextCard","getAvailableCards","cards","filter","c","hasMatchingWorldQuery","isAvailableWhen","events","e","shouldTriggerWhen","worldQueries","some","q","isMatchingWorldQuery","flags","entries","every","max","flag","currentAction","actions","left","right","updatedWorld","getUpdatedWorld","modifier","setState","getNextCard","nextCard","eventCards","isEventCardWithPointer","type","nextEventCardId","eventStartingNow","hasOwnProperty","Error","availableCards","updateWorldState","updateWorldFlags","currentWorldState","reduce","updatedState","newValue","currentWorldFlags","updatedFlags","Date","now","selectWeightedRandomFrom","selectRandomFrom","random","probability","array","floor","weightFunc","element","weight","acc","count","selectionList","push","selectionPosition","findIndex","cardId","Component","environment","people","security","defaultEventCards","DEFAULT_GAME_STATE","freeze","money","defaultStats","name","defaultGameWorld","internalGameWorlds","default","tryLoadFromLocalStorage","path","a","matchLocal","match","gameWorldId","gameWorld","data","JSON","parse","localStorage","getItem","console","log","tryLoadFromInternalData","matchInternal","warn","tryLoadFromRestAPI","statsPath","cardsPath","eventsPath","eventCardsPath","defaultStatePath","fetchJSON","loadGameWorld","defaultValue","fetch","json","main","App","setWorldData","fetchWorld","URLSearchParams","location","search","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.260afdc9.chunk.js","sourcesContent":["export const SWIPE_DIRECTION = {\n    LEFT: -1,\n    RIGHT: 1,\n}\n","import React, { useState } from 'react'\nimport { animated, interpolate } from 'react-spring'\nimport { useSpring } from 'react-spring'\nimport { useGesture } from 'react-with-gesture'\n\nimport { useKeyboardEvent } from '../util/hooks'\nimport { SWIPE_DIRECTION } from '../util/constants'\n\nconst to = (i) => ({\n    x: 0,\n    y: 0,\n    scale: 1,\n    rot: 0,\n    delay: i * 100,\n})\nconst from = (i) => ({ rot: 0, scale: 1.0, y: 10 })\n\nconst trans = (r, s) =>\n    `perspective(1500px) rotate3d(1, 0, 0, 30deg) rotate3d(0, 0, 1, ${r}deg) scale(${s})`\n\nconst getDeltaX = () => getThreshold() / window.devicePixelRatio\n\nconst getThreshold = () => Math.min(200, window.innerWidth / 2)\n\nfunction Card({ i, cardData, onSwipe, layer }) {\n    const { title, distance, text, image } = cardData\n\n    const [cardAnimationState, setCardAnimationState] = useSpring(() => ({\n        ...to(i),\n        from: from(i),\n    }))\n\n    const [cardState] = useState({ isGone: false, currentKey: null })\n\n    const gestureControl = ({\n        args: [index],\n        down,\n        delta: [xDelta],\n        distance,\n        direction: [xDir],\n        velocity,\n    }) => {\n        const trigger =\n            Math.abs(xDelta) * window.devicePixelRatio > getThreshold()\n        const dir = Math.sign(xDelta)\n\n        if (!down && trigger && !cardState.isGone) {\n            // Handle game state updates\n            cardState.isGone = true\n            window.setTimeout(() => {\n                onSwipe(cardData, dir)\n                cardState.currentKey = null\n            }, 200)\n        }\n        const isGone = cardState.isGone\n\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0\n\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0)\n        const scale = down ? 1.1 : 1\n\n        const animationState = {\n            x,\n            rot,\n            scale,\n            delay: undefined,\n            config: {\n                friction: 50,\n                tension: down ? 800 : isGone ? 200 : 500,\n            },\n        }\n\n        setCardAnimationState(animationState)\n    }\n\n    useKeyboardEvent(['ArrowLeft', 'ArrowRight'], (down, key) => {\n        if (down && !cardState.currentKey) {\n            cardState.currentKey = key\n        }\n        if (cardState.currentKey === key) {\n            const directionX =\n                key === 'ArrowLeft'\n                    ? SWIPE_DIRECTION.LEFT\n                    : SWIPE_DIRECTION.RIGHT\n            gestureControl({\n                down,\n                delta: [directionX * (getDeltaX() + 1), 0],\n                direction: [directionX, 0],\n                args: [0],\n                distance: 0,\n                velocity: 5,\n            })\n        }\n    })\n\n    const bind = useGesture((args) => {\n        if (!cardState.currentKey) gestureControl(args)\n    })\n\n    const { x, y, rot, scale } = cardAnimationState\n\n    return (\n        <animated.div\n            className=\"card-container\"\n            key={i}\n            style={{\n                position: 'absolute',\n                transform: interpolate(\n                    [x, y],\n                    (x, y) => `translate3d(${x}px,${y}px,0)`,\n                ),\n                zIndex: layer,\n            }}\n        >\n            <animated.div\n                className=\"card card-front\"\n                {...bind(i)}\n                style={{\n                    transform: interpolate([rot, scale], trans),\n                }}\n            >\n                <div className=\"card-content\">\n                    <div\n                        className=\"card-image\"\n                        style={{\n                            backgroundImage:\n                                'url(' + (image ? image : '') + ')',\n                        }}\n                    ></div>\n                    <div className=\"card-text\">\n                        {distance && <em className=\"location\">{distance}</em>}\n                        <h1 className=\"title\">{title}</h1>\n                        <p className=\"text\">{text}</p>\n                    </div>\n                </div>\n            </animated.div>\n        </animated.div>\n    )\n}\n\nexport default Card\n","import { useEffect } from 'react'\n\nexport const useKeyboardEvent = (keys, callback) => {\n    useEffect(() => {\n        const downHandler = function(event) {\n            if (keys.includes(event.key)) {\n                callback(true, event.key)\n            }\n        }\n        const upHandler = function(event) {\n            if (keys.includes(event.key)) {\n                callback(false, event.key)\n            }\n        }\n        window.addEventListener('keydown', downHandler)\n        window.addEventListener('keyup', upHandler)\n        return () => {\n            window.removeEventListener('keydown', downHandler)\n            window.removeEventListener('keyup', upHandler)\n        }\n    })\n}\n","import React from 'react'\n\nfunction DummyCard({ x, y, r = 0, layer }) {\n    return (\n        <div\n            className=\"card-container\"\n            style={{\n                position: 'absolute',\n                transform: `translate3d(${x}px, ${y}px, 0)`,\n                transition: 'transform 0.1s',\n                zIndex: layer,\n            }}\n        >\n            <div\n                className=\"card card-back\"\n                style={{\n                    transform: `perspective(1500px) rotate3d(1, 0, 0, 30deg) rotate3d(0, 0, 1, ${r}deg)`,\n                    transition: 'transform 0.1s',\n                }}\n            >\n                <div className=\"card-content\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default DummyCard\n","import React from 'react'\n\nimport Card from './Card'\nimport DummyCard from './DummyCard'\nimport './Deck.scss'\n\nfunction Deck({ onSwipe, card, tick = 0 }) {\n    const cardStack = Array.apply(null, Array(5)).map((_, index) => index)\n    return (\n        <div className=\"deck-root\">\n            {cardStack.map((key, index, list) => (\n                <DummyCard\n                    x={0}\n                    y={\n                        10 +\n                        list[loopingIndex(index, list.length, tick)] *\n                            (50 / list.length)\n                    }\n                    key={index}\n                    r={Math.sin(key * 2345) * 1}\n                    layer={list.length - loopingIndex(index, list.length, tick)}\n                />\n            ))}\n            <Card\n                i={0}\n                key={card.id}\n                cardData={card}\n                onSwipe={onSwipe}\n                layer={cardStack.length + 1}\n            />\n        </div>\n    )\n}\n\nfunction loopingIndex(index, length, tick) {\n    const result = (length + index - (tick % length)) % length\n    return result\n}\n\nexport default Deck\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nconst Container = styled.div`\n    margin-top: 10px;\n    width: 40px;\n    height: 8px;\n    border-radius: 4px;\n    background: #546a76;\n`\n\nconst Value = styled.div`\n    position: relative;\n    top: 1px;\n    left: 1px;\n    height: 6px;\n    max-width: 38px;\n    border-radius: 3px;\n`\n\nfunction Bar({ value = 100 }) {\n    return (\n        <Container>\n            <Value\n                style={{\n                    width: `${value}%`,\n                    backgroundColor: getBarColor(value),\n                }}\n            />\n        </Container>\n    )\n}\n\nfunction getBarColor(value) {\n    if (value <= 30) {\n        return '#dd7373'\n    } else if (value <= 70) {\n        return '#e7e247'\n    } else {\n        return '#91c779'\n    }\n}\n\nexport default Bar\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\n// This could prove to be a hit in binary size since we require all the icons in each pack. This compromise allows for more dynamic content.\nimport * as IoIcons from 'react-icons/io'\nimport * as GameIcons from 'react-icons/gi'\nimport * as FeatherIcons from 'react-icons/fi'\n\nimport Bar from './Bar'\n\nconst Container = styled.header`\n    background: #f6fbf5;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n`\n\nconst Stat = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: column;\n`\n\nconst Icon = styled.div`\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background: #91c779;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nfunction Stats({ stats }) {\n    return (\n        <Container>\n            {stats.map(s => {\n                const IconWidget =\n                    GameIcons[s.icon] || IoIcons[s.icon] || FeatherIcons[s.icon]\n                const iconSize = s.iconSize || '80%'\n                const value = s.value\n                return (\n                    <Stat key={s.id}>\n                        <Icon>\n                            {IconWidget && <IconWidget size={iconSize} />}\n                        </Icon>\n                        <Bar value={value} />\n                    </Stat>\n                )\n            })}\n        </Container>\n    )\n}\n\nexport default Stats\n","import defaultCards from '../data/default/cards.js'\nimport defaultEvents from '../data/default/events.js'\nimport defaultEventCards from '../data/default/event-cards.js'\n\nfor (const eventCardId of Object.keys(defaultEventCards)) {\n    defaultEventCards[eventCardId].type = 'event'\n}\n\nexport const DEFAULT_GAME_STATE = Object.freeze({\n    state: {\n        environment: 40,\n        people: 60,\n        security: 75,\n        money: 90,\n    },\n    flags: {},\n})\n\nconst defaultStats = [\n    {\n        id: 'environment',\n        name: 'Environment',\n        icon: 'GiWheat',\n    },\n    {\n        id: 'people',\n        name: 'People',\n        icon: 'IoIosPeople',\n    },\n    {\n        id: 'security',\n        name: 'Security',\n        icon: 'GiAk47',\n    },\n    {\n        id: 'money',\n        name: 'Money',\n        icon: 'GiMoneyStack',\n    },\n]\n\nexport const defaultGameWorld = {\n    stats: defaultStats,\n    cards: defaultCards,\n    events: defaultEvents,\n    eventCards: defaultEventCards,\n    defaultState: DEFAULT_GAME_STATE,\n}\n\nconst internalGameWorlds = {\n    default: defaultGameWorld,\n}\n\nasync function tryLoadFromLocalStorage(path) {\n    const matchLocal = path.match(/^local:\\/\\/(.*)/)\n\n    if (matchLocal) {\n        // Import from SFF game world editor hosted on the same domain.\n        // Using localStorage to share data across apps\n        const id = matchLocal[1]\n        const gameWorldId = 'game_world:' + id\n        let gameWorld = {}\n        try {\n            const data = JSON.parse(localStorage.getItem(gameWorldId))\n            if (!data)\n                throw new Error(\n                    'Could not load data from local storage: ' + gameWorldId,\n                )\n            gameWorld = data || {}\n        } catch (e) {\n            console.log(e)\n        }\n        return Object.assign({}, defaultGameWorld, gameWorld)\n    }\n\n    return null\n}\n\n// Load GameWorld from data directory of this repository\nasync function tryLoadFromInternalData(path) {\n    const matchInternal = path.match(/^internal:\\/\\/(.*)/)\n\n    if (matchInternal) {\n        const id = matchInternal[1]\n        const gameWorld = internalGameWorlds[id]\n        if (!gameWorld) {\n            console.warn('Could not load local game world: ', id)\n            return defaultGameWorld\n        }\n        return gameWorld\n    }\n\n    return null\n}\n\nasync function tryLoadFromRestAPI(path) {\n    // Default: expect a folder to represent a game world and contain specific JSON-files.\n    const statsPath = path + '/stats.json'\n    const cardsPath = path + '/cards.json'\n    const eventsPath = path + '/events.json'\n    const eventCardsPath = path + '/event-cards.json'\n    const defaultStatePath = path + '/default-state.json'\n\n    // IDEA: load data in parallel instead of sequentially to improve performance\n    const stats = await fetchJSON(statsPath, defaultStats)\n    const cards = await fetchJSON(cardsPath, [])\n    const events = await fetchJSON(eventsPath, [])\n    const eventCards = await fetchJSON(eventCardsPath, {})\n    const defaultState = await fetchJSON(defaultStatePath, DEFAULT_GAME_STATE)\n\n    return {\n        stats,\n        cards,\n        events,\n        eventCards,\n        defaultState,\n    }\n}\n\nexport async function loadGameWorld(path) {\n    return (\n        (await tryLoadFromInternalData(path)) ||\n        (await tryLoadFromLocalStorage(path)) ||\n        (await tryLoadFromRestAPI(path))\n    )\n}\n\nasync function fetchJSON(path, defaultValue) {\n    try {\n        console.log('fetching path: ', path)\n        return await (await window.fetch(path)).json()\n    } catch (e) {\n        console.warn('Could not load path: ' + path)\n\n        return defaultValue\n    }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components/macro'\n\nimport Deck from './Deck'\nimport Stats from './Stats'\nimport { SWIPE_DIRECTION } from '../util/constants'\n\nconst Footer = styled.footer`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport default class Game extends Component {\n    state = this.getInitialState()\n\n    render() {\n        const card = this.addUniqueCardId(this.state.card)\n        const worldState = this.state.world.state\n        const stats = this.props.worldData.stats.map(stat =>\n            Object.assign({}, stat, {\n                value: worldState[stat.id],\n            }),\n        )\n        return (\n            <>\n                <Stats stats={stats} />\n                <Deck\n                    onSwipe={this.onSwipe.bind(this)}\n                    card={card}\n                    tick={this.state.rounds}\n                />\n                <Footer>\n                    <div className=\"time-remaining\"></div>\n                </Footer>\n            </>\n        )\n    }\n\n    getInitialState() {\n        const defaultState = this.props.worldData.defaultState\n        return {\n            world: defaultState,\n            card: this.getInitialCard(defaultState),\n            rounds: 0,\n        }\n    }\n\n    getInitialCard(world) {\n        const availableEvents = this.getAvailableEvents(world)\n        const event = this.selectNextEvent(availableEvents)\n\n        if (event) {\n            return this.selectEventCard(event.initialEventCardId)\n        } else {\n            return this.selectNextCard(\n                this.getAvailableCards(this.props.worldData.defaultState),\n            )\n        }\n    }\n\n    getAvailableCards(world) {\n        const { cards } = this.props.worldData\n        return cards.filter(c =>\n            this.hasMatchingWorldQuery(world, c.isAvailableWhen),\n        )\n    }\n\n    getAvailableEvents(world) {\n        const { events } = this.props.worldData\n        return events.filter(e =>\n            this.hasMatchingWorldQuery(world, e.shouldTriggerWhen),\n        )\n    }\n\n    hasMatchingWorldQuery(world, worldQueries) {\n        return worldQueries.some(q => this.isMatchingWorldQuery(world, q))\n    }\n\n    isMatchingWorldQuery(world, { state = {}, flags = {} }) {\n        const hasStateMatch = Object.entries(state).every(\n            ([key, [min, max]]) =>\n                world.state[key] >= min && world.state[key] <= max,\n        )\n\n        const result =\n            hasStateMatch &&\n            Object.entries(flags).every(\n                ([flag, value]) => world.flags[flag] === value,\n            )\n\n        return result\n    }\n\n    onSwipe(card, direction) {\n        const currentAction =\n            direction === SWIPE_DIRECTION.LEFT\n                ? card.actions.left\n                : card.actions.right\n\n        const updatedWorld = this.getUpdatedWorld(currentAction.modifier)\n\n        this.setState({\n            world: updatedWorld,\n            card: this.getNextCard(updatedWorld, card, currentAction),\n            rounds: this.state.rounds + 1,\n        })\n    }\n\n    getNextCard(updatedWorld, card, currentAction) {\n        const { eventCards } = this.props.worldData\n        const availableEvents = this.getAvailableEvents(updatedWorld)\n        const isEventCardWithPointer =\n            card.type === 'event' &&\n            typeof currentAction.nextEventCardId === 'string'\n        const eventStartingNow = !isEventCardWithPointer\n            ? this.selectNextEvent(availableEvents)\n            : null\n        let nextCard\n\n        // Only select the next EventCard if a specific one is given\n        // Else cancel the event and continue with normal cards.\n        if (isEventCardWithPointer) {\n            if (!eventCards.hasOwnProperty(currentAction.nextEventCardId)) {\n                throw new Error(\n                    `eventCardId \"${currentAction.nextEventCardId}\" does not exist. Make sure it's spelled correctly`,\n                )\n            }\n            nextCard = this.selectEventCard(currentAction.nextEventCardId)\n        } else if (eventStartingNow) {\n            nextCard = this.selectEventCard(eventStartingNow.initialEventCardId)\n        } else {\n            const availableCards = this.getAvailableCards(updatedWorld)\n            nextCard = this.selectNextCard(availableCards)\n        }\n\n        return nextCard\n    }\n\n    getUpdatedWorld({ type = 'add', state = {}, flags = {} }) {\n        // get default values for missing props by destructuring the incoming `modifier` and then directly reassembling it\n        // IDEA: Could this all be done in the function declaration, when specifying parameters?\n        const modifier = { type, state, flags }\n        const updatedWorldState = this.updateWorldState(modifier)\n        const updatedWorldFlags = this.updateWorldFlags(modifier)\n\n        return {\n            state: updatedWorldState,\n            flags: updatedWorldFlags,\n        }\n    }\n\n    updateWorldState(modifier) {\n        const currentWorldState =\n            modifier.type === 'replace'\n                ? Object.assign({}, this.props.worldData.defaultState.state)\n                : Object.assign({}, this.state.world.state)\n\n        const updatedWorldState = Object.entries(modifier.state).reduce(\n            (updatedState, [key, value]) => {\n                const newValue =\n                    modifier.type === 'set' || modifier.type === 'replace'\n                        ? value\n                        : value + (updatedState[key] || 0)\n\n                updatedState[key] = Math.min(Math.max(newValue, 0), 100)\n\n                return updatedState\n            },\n            currentWorldState,\n        )\n\n        return updatedWorldState\n    }\n\n    updateWorldFlags(modifier) {\n        const currentWorldFlags =\n            modifier.type === 'replace'\n                ? Object.assign({}, this.props.worldData.defaultState.flags)\n                : Object.assign({}, this.state.world.flags)\n\n        const updatedWorldFlags = Object.keys(modifier.flags).reduce(\n            (updatedFlags, key) => {\n                updatedFlags[key] = modifier.flags[key]\n                return updatedFlags\n            },\n            currentWorldFlags,\n        )\n\n        return updatedWorldFlags\n    }\n\n    addUniqueCardId(card, index = 0) {\n        return {\n            ...card,\n            id: Date.now() + ':' + index,\n        }\n    }\n\n    selectNextCard(cards = []) {\n        return this.selectWeightedRandomFrom(cards)\n    }\n\n    selectNextEvent(events = []) {\n        const event = this.selectRandomFrom(events)\n        if (event && Math.random() <= event.probability) {\n            return event\n        }\n    }\n\n    selectRandomFrom(array) {\n        return array[Math.floor(Math.random() * array.length)]\n    }\n\n    selectWeightedRandomFrom(array, weightFunc = (element) => element.weight) {\n        const {selectionList, count} = array.reduce((acc, element) => {\n            acc.count += weightFunc(element)\n            acc.selectionList.push(acc.count)\n            return acc\n        }, {count: 0, selectionList: []})\n\n        const selectionPosition = Math.random() * count\n        return array[selectionList.findIndex((max, index, array) => {\n            const min = index > 0 ? array[index - 1] : 0\n            return selectionPosition >= min && selectionPosition <= max\n        })]\n    }\n\n    selectEventCard(cardId) {\n        const { eventCards } = this.props.worldData\n        return eventCards[cardId]\n    }\n}\n","export default {\n    'end-game': {\n        image:\n            'https://images.unsplash.com/photo-1497039465987-61d305728610?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'The World Has Ended.',\n        distance: '100 miles away',\n        text:\n            'Please find a new planet to destroy, if you want to proceed. And do not try to swipe. Please.',\n        weight: 1000,\n        actions: {\n            left: {\n                modifier: {\n                    type: 'replace',\n                    state: {\n                        environment: 10,\n                        people: 10,\n                        security: 10,\n                    },\n                    flags: {},\n                },\n                nextEventCardId: null,\n            },\n            right: {\n                modifier: {\n                    type: 'replace',\n                    state: {\n                        environment: 10,\n                        people: 10,\n                        security: 10,\n                    },\n                    flags: {},\n                },\n                nextEventCardId: null,\n            },\n        },\n    },\n}\n","export default [\n    {\n        image:\n            'https://images.unsplash.com/photo-1561623002-b3520705eccf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'We need power.',\n        distance: '4 miles away',\n        text: 'Lorem ipsum COALar sit amet consectetur, adipisicing elit.',\n        weight: 1,\n        isAvailableWhen: [\n            { state: { environment: [10, 100], money: [80, 100] } },\n            { state: { people: [10, 100], money: [80, 100] } },\n            { state: { security: [10, 100], money: [80, 100] } },\n        ],\n        actions: {\n            left: {\n                modifier: {\n                    type: 'add',\n                    state: {\n                        environment: -100,\n                        people: -100,\n                        security: -100,\n                        money: -100,\n                    },\n                },\n            },\n            right: {\n                modifier: {\n                    type: 'add',\n                    state: {\n                        environment: 40,\n                        people: 60,\n                        security: 75,\n                        money: 90,\n                    },\n                },\n            },\n        },\n    },\n    {\n        image:\n            'https://images.unsplash.com/photo-1497435334941-8c899ee9e8e9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'Invest in solar?',\n        distance: '100 miles away',\n        text: 'Lorem ipsum SOLAR sit amet consectetur, adipisicing elit.',\n        weight: 1,\n        isAvailableWhen: [\n            { state: { environment: [60, 100], money: [30, 31] } },\n            { state: { people: [60, 100], money: [30, 31] } },\n            { state: { security: [60, 100], money: [30, 31] } },\n        ],\n        actions: {\n            left: {\n                modifier: {\n                    type: 'add',\n                    state: {\n                        environment: -100,\n                        people: -100,\n                        security: -100,\n                        money: -100,\n                    },\n                },\n            },\n            right: {\n                modifier: {\n                    type: 'add',\n                    state: {\n                        environment: 40,\n                        people: 60,\n                        security: 75,\n                        money: 90,\n                    },\n                },\n            },\n        },\n    },\n]\n","export default [\n    {\n        probability: 1,\n        shouldTriggerWhen: [\n            { state: { environment: [0, 0] } },\n            { state: { security: [0, 0] } },\n            { state: { money: [0, 0] } },\n            { state: { people: [0, 0] } },\n        ],\n        initialEventCardId: 'end-game',\n    },\n]\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components/macro'\n\nimport Game from './components/Game'\nimport { loadGameWorld } from './game/GameWorld'\n\nconst Container = styled.main`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100%;\n    background: #546a76;\n    display: grid;\n    grid-template-rows: minmax(50px, 80px) auto minmax(50px, 80px);\n`\n\nfunction App({ path }) {\n    const [worldData, setWorldData] = useState(null)\n    useEffect(() => {\n        const fetchWorld = async () => {\n            const worldData = await loadGameWorld(path)\n            setWorldData(worldData)\n        }\n        fetchWorld()\n    }, [path, setWorldData])\n    return <Container>{worldData && <Game worldData={worldData} />}</Container>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nconst urlParams = new URLSearchParams(window.location.search)\nconst path = urlParams.get('path') || '/data/default'\n\nReactDOM.render(<App path={path} />, document.getElementById('root'))\n"],"sourceRoot":""}