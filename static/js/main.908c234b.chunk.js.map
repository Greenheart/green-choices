{"version":3,"sources":["util/hooks.js","util/constants.js","components/Card.js","components/DummyCard.js","components/Deck.js","components/Bar.js","components/Stats.js","game/GameWorld.js","components/Game.js","data/default/event-cards.js","data/default/cards.js","data/default/events.js","App.js","index.js"],"names":["useKeyboardEvent","keys","callback","useEffect","downHandler","event","includes","key","upHandler","window","addEventListener","removeEventListener","SWIPE_DIRECTION","LEFT","RIGHT","to","i","x","y","scale","rot","delay","from","trans","r","s","getDeltaX","getThreshold","devicePixelRatio","Math","min","innerWidth","Card","cardData","onSwipe","layer","title","distance","text","image","useSpring","cardAnimationState","setCardAnimationState","useState","isGone","currentKey","cardState","gestureControl","args","down","xDelta","delta","velocity","direction","trigger","abs","dir","sign","setTimeout","undefined","config","friction","tension","directionX","bind","useGesture","div","className","style","position","transform","interpolate","zIndex","src","alt","width","DummyCard","transition","loopingIndex","index","length","tick","Deck","card","cardStack","Array","apply","map","_","list","sin","id","Container","styled","Value","getBarColor","value","Bar","backgroundColor","header","Stat","Icon","Stats","stats","IconWidget","GameIcons","icon","IoIcons","FeatherIcons","iconSize","size","Footer","footer","Game","state","getInitialState","this","addUniqueCardId","worldState","world","props","worldData","stat","Object","assign","rounds","defaultState","getInitialCard","availableEvents","getAvailableEvents","selectNextEvent","selectEventCard","initialEventCardId","selectNextCard","getAvailableCards","cards","filter","c","hasMatchingWorldQuery","isAvailableWhen","events","e","shouldTriggerWhen","worldQueries","some","q","isMatchingWorldQuery","flags","entries","every","max","flag","currentAction","actions","left","right","updatedWorld","getUpdatedWorld","modifier","setState","getNextCard","nextCard","eventCards","eventStartingNow","type","nextEventCardId","hasOwnProperty","Error","availableCards","updateWorldState","updateWorldFlags","currentWorldState","reduce","updatedState","newValue","currentWorldFlags","updatedFlags","Date","now","selectRandomFrom","random","probability","array","floor","cardId","Component","weight","environment","people","security","defaultEventCards","DEFAULT_GAME_STATE","freeze","money","defaultStats","name","defaultGameWorld","internalGameWorlds","default","tryLoadFromLocalStorage","path","a","async","matchLocal","match","gameWorldId","gameWorld","data","JSON","parse","localStorage","getItem","console","log","tryLoadFromInternalData","matchInternal","warn","tryLoadFromRestAPI","statsPath","cardsPath","eventsPath","eventCardsPath","defaultStatePath","fetchJSON","loadGameWorld","defaultValue","fetch","json","main","App","setWorldData","fetchWorld","URLSearchParams","location","search","get","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.908c234b.chunk.js","sourcesContent":["import { useEffect } from 'react'\n\nexport const useKeyboardEvent = (keys, callback) => {\n    useEffect(() => {\n        const downHandler = function(event) {\n            if (keys.includes(event.key)) {\n                callback(true, event.key)\n            }\n        }\n        const upHandler = function(event) {\n            if (keys.includes(event.key)) {\n                callback(false, event.key)\n            }\n        }\n        window.addEventListener('keydown', downHandler)\n        window.addEventListener('keyup', upHandler)\n        return () => {\n            window.removeEventListener('keydown', downHandler)\n            window.removeEventListener('keyup', upHandler)\n        }\n    })\n}\n","export const SWIPE_DIRECTION = {\n    LEFT: -1,\n    RIGHT: 1,\n}\n","import React, { useState } from 'react'\nimport { animated, interpolate } from 'react-spring/hooks'\nimport { useSpring } from 'react-spring/hooks'\nimport { useGesture } from 'react-with-gesture'\n\nimport { useKeyboardEvent } from '../util/hooks'\nimport { SWIPE_DIRECTION } from '../util/constants'\n\nconst to = i => ({\n    x: 0,\n    y: 0,\n    scale: 1,\n    rot: 0,\n    delay: i * 100,\n})\nconst from = i => ({ rot: 0, scale: 1.0, y: 10 })\n\nconst trans = (r, s) =>\n    `perspective(1500px) rotate3d(1, 0, 0, 30deg) rotate3d(0, 0, 1, ${r}deg) scale(${s})`\n\nconst getDeltaX = () => getThreshold() / window.devicePixelRatio\n\nconst getThreshold = () => Math.min(200, window.innerWidth / 2)\n\nfunction Card({ i, cardData, onSwipe, layer }) {\n    const { title, distance, text, image } = cardData\n\n    const [cardAnimationState, setCardAnimationState] = useSpring(() => ({\n        ...to(i),\n        from: from(i),\n    }))\n\n    const [cardState] = useState({ isGone: false, currentKey: null })\n\n    const gestureControl = ({\n        args: [index],\n        down,\n        delta: [xDelta],\n        distance,\n        direction: [xDir],\n        velocity,\n    }) => {\n        const trigger =\n            Math.abs(xDelta) * window.devicePixelRatio > getThreshold()\n        const dir = Math.sign(xDelta)\n\n        if (!down && trigger && !cardState.isGone) {\n            // Handle game state updates\n            cardState.isGone = true\n            window.setTimeout(() => {\n                onSwipe(cardData, dir)\n                cardState.currentKey = null\n            }, 200)\n        }\n        const isGone = cardState.isGone\n\n        const x = isGone ? (200 + window.innerWidth) * dir : down ? xDelta : 0\n\n        const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0)\n        const scale = down ? 1.1 : 1\n\n        const animationState = {\n            x,\n            rot,\n            scale,\n            delay: undefined,\n            config: {\n                friction: 50,\n                tension: down ? 800 : isGone ? 200 : 500,\n            },\n        }\n\n        setCardAnimationState(animationState)\n    }\n\n    useKeyboardEvent(['ArrowLeft', 'ArrowRight'], (down, key) => {\n        if (down && !cardState.currentKey) {\n            cardState.currentKey = key\n        }\n        if (cardState.currentKey === key) {\n            const directionX =\n                key === 'ArrowLeft'\n                    ? SWIPE_DIRECTION.LEFT\n                    : SWIPE_DIRECTION.RIGHT\n            gestureControl({\n                down,\n                delta: [directionX * (getDeltaX() + 1), 0],\n                direction: [directionX, 0],\n                args: [0],\n                distance: 0,\n                velocity: 5,\n            })\n        }\n    })\n\n    const bind = useGesture(args => {\n        if (!cardState.currentKey) gestureControl(args)\n    })\n\n    const { x, y, rot, scale } = cardAnimationState\n\n    return (\n        <animated.div\n            className=\"card-container\"\n            key={i}\n            style={{\n                position: 'absolute',\n                transform: interpolate(\n                    [x, y],\n                    (x, y) => `translate3d(${x}px,${y}px,0)`,\n                ),\n                zIndex: layer,\n            }}\n        >\n            <animated.div\n                className=\"card card-front\"\n                {...bind(i)}\n                style={{\n                    transform: interpolate([rot, scale], trans),\n                }}\n            >\n                <div className=\"card-content\">\n                    <img\n                        src={image ? image : ''}\n                        alt={title}\n                        style={{ width: '100%' }}\n                    />\n                    <h2>{title}</h2>\n                    <h5>{distance}</h5>\n                    <h5>{text}</h5>\n                </div>\n            </animated.div>\n        </animated.div>\n    )\n}\n\nexport default Card\n","import React from 'react'\n\nfunction DummyCard({ x, y, r = 0, layer }) {\n    return (\n        <div\n            className=\"card-container\"\n            style={{\n                position: 'absolute',\n                transform: `translate3d(${x}px, ${y}px, 0)`,\n                transition: 'transform 0.1s',\n                zIndex: layer,\n            }}\n        >\n            <div\n                className=\"card card-back\"\n                style={{\n                    transform: `perspective(1500px) rotate3d(1, 0, 0, 30deg) rotate3d(0, 0, 1, ${r}deg)`,\n                    transition: 'transform 0.1s',\n                }}\n            >\n                <div className=\"card-content\"></div>\n            </div>\n        </div>\n    )\n}\n\nexport default DummyCard\n","import React from 'react'\n\nimport Card from './Card'\nimport DummyCard from './DummyCard'\nimport './Deck.css'\n\nfunction Deck({ onSwipe, card, tick = 0 }) {\n    const cardStack = Array.apply(null, Array(5)).map((_, index) => index)\n    return (\n        <div className=\"deck-root\">\n            {cardStack.map((key, index, list) => (\n                <DummyCard\n                    x={0}\n                    y={\n                        10 +\n                        list[loopingIndex(index, list.length, tick)] *\n                            (50 / list.length)\n                    }\n                    key={index}\n                    r={Math.sin(key * 2345) * 1}\n                    layer={list.length - loopingIndex(index, list.length, tick)}\n                />\n            ))}\n            <Card\n                i={0}\n                key={card.id}\n                cardData={card}\n                onSwipe={onSwipe}\n                layer={cardStack.length + 1}\n            />\n        </div>\n    )\n}\n\nfunction loopingIndex(index, length, tick) {\n    const result = (length + index - (tick % length)) % length\n    return result\n}\n\nexport default Deck\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nconst Container = styled.div`\n    margin-top: 10px;\n    width: 40px;\n    height: 8px;\n    border-radius: 4px;\n    background: #546a76;\n`\n\nconst Value = styled.div`\n    position: relative;\n    top: 1px;\n    left: 1px;\n    height: 6px;\n    max-width: 38px;\n    border-radius: 3px;\n`\n\nfunction Bar({ value = 100 }) {\n    return (\n        <Container>\n            <Value\n                style={{\n                    width: `${value}%`,\n                    backgroundColor: getBarColor(value),\n                }}\n            />\n        </Container>\n    )\n}\n\nfunction getBarColor(value) {\n    if (value <= 30) {\n        return '#dd7373'\n    } else if (value <= 70) {\n        return '#e7e247'\n    } else {\n        return '#91c779'\n    }\n}\n\nexport default Bar\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\n// This could prove to be a hit in binary size since we require all the icons in each pack. This compromise allows for more dynamic content.\nimport * as IoIcons from 'react-icons/io'\nimport * as GameIcons from 'react-icons/gi'\nimport * as FeatherIcons from 'react-icons/fi'\n\nimport Bar from './Bar'\n\nconst Container = styled.header`\n    background: #f6fbf5;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n`\n\nconst Stat = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: column;\n`\n\nconst Icon = styled.div`\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background: #91c779;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nfunction Stats({ stats }) {\n    return (\n        <Container>\n            {stats.map(s => {\n                const IconWidget =\n                    GameIcons[s.icon] || IoIcons[s.icon] || FeatherIcons[s.icon]\n                const iconSize = s.iconSize || '80%'\n                const value = s.value\n                return (\n                    <Stat key={s.id}>\n                        <Icon>\n                            {IconWidget && <IconWidget size={iconSize} />}\n                        </Icon>\n                        <Bar value={value} />\n                    </Stat>\n                )\n            })}\n        </Container>\n    )\n}\n\nexport default Stats\n","import defaultCards from '../data/default/cards.js'\nimport defaultEvents from '../data/default/events.js'\nimport defaultEventCards from '../data/default/event-cards.js'\n\nfor (const eventCardId of Object.keys(defaultEventCards)) {\n    defaultEventCards[eventCardId].type = 'event'\n}\n\nexport const DEFAULT_GAME_STATE = Object.freeze({\n    state: {\n        environment: 40,\n        people: 60,\n        security: 75,\n        money: 90,\n    },\n    flags: {},\n})\n\nconst defaultStats = [\n    {\n        id: 'environment',\n        name: 'Environment',\n        icon: 'GiWheat',\n    },\n    {\n        id: 'people',\n        name: 'People',\n        icon: 'IoIosPeople',\n    },\n    {\n        id: 'security',\n        name: 'Security',\n        icon: 'GiAk47',\n    },\n    {\n        id: 'money',\n        name: 'Money',\n        icon: 'GiMoneyStack',\n    },\n]\n\nexport const defaultGameWorld = {\n    stats: defaultStats,\n    cards: defaultCards,\n    events: defaultEvents,\n    eventCards: defaultEventCards,\n    defaultState: DEFAULT_GAME_STATE,\n}\n\nconst internalGameWorlds = {\n    default: defaultGameWorld,\n}\n\nasync function tryLoadFromLocalStorage(path) {\n    const matchLocal = path.match(/^local:\\/\\/(.*)/)\n\n    if (matchLocal) {\n        // Import from SFF game world editor hosted on the same domain.\n        // Using localStorage to share data across apps\n        const id = matchLocal[1]\n        const gameWorldId = 'game_world:' + id\n        let gameWorld = {}\n        try {\n            const data = JSON.parse(localStorage.getItem(gameWorldId))\n            if (!data)\n                throw new Error(\n                    'Could not load data from local storage: ' + gameWorldId,\n                )\n            gameWorld = data || {}\n        } catch (e) {\n            console.log(e)\n        }\n        return Object.assign({}, defaultGameWorld, gameWorld)\n    }\n\n    return null\n}\n\n// Load GameWorld from data directory of this repository\nasync function tryLoadFromInternalData(path) {\n    const matchInternal = path.match(/^internal:\\/\\/(.*)/)\n\n    if (matchInternal) {\n        const id = matchInternal[1]\n        const gameWorld = internalGameWorlds[id]\n        if (!gameWorld) {\n            console.warn('Could not load local game world: ', id)\n            return defaultGameWorld\n        }\n        return gameWorld\n    }\n\n    return null\n}\n\nasync function tryLoadFromRestAPI(path) {\n    // Default: expect a folder to represent a game world and contain specific JSON-files.\n    const statsPath = path + '/stats.json'\n    const cardsPath = path + '/cards.json'\n    const eventsPath = path + '/events.json'\n    const eventCardsPath = path + '/event-cards.json'\n    const defaultStatePath = path + '/default-state.json'\n\n    // IDEA: load data in parallel instead of sequentially to improve performance\n    const stats = await fetchJSON(statsPath, defaultStats)\n    const cards = await fetchJSON(cardsPath, [])\n    const events = await fetchJSON(eventsPath, [])\n    const eventCards = await fetchJSON(eventCardsPath, {})\n    const defaultState = await fetchJSON(defaultStatePath, DEFAULT_GAME_STATE)\n\n    return {\n        stats,\n        cards,\n        events,\n        eventCards,\n        defaultState,\n    }\n}\n\nexport async function loadGameWorld(path) {\n    return (\n        (await tryLoadFromInternalData(path)) ||\n        (await tryLoadFromLocalStorage(path)) ||\n        (await tryLoadFromRestAPI(path))\n    )\n}\n\nasync function fetchJSON(path, defaultValue) {\n    try {\n        console.log('fetching path: ', path)\n        return await (await window.fetch(path)).json()\n    } catch (e) {\n        console.warn('Could not load path: ' + path)\n\n        return defaultValue\n    }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components/macro'\n\nimport Deck from './Deck'\nimport Stats from './Stats'\nimport { SWIPE_DIRECTION } from '../util/constants'\n\nconst Footer = styled.footer`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport default class Game extends Component {\n    state = this.getInitialState()\n\n    render() {\n        const card = this.addUniqueCardId(this.state.card)\n        const worldState = this.state.world.state\n        const stats = this.props.worldData.stats.map(stat =>\n            Object.assign({}, stat, {\n                value: worldState[stat.id],\n            }),\n        )\n        return (\n            <>\n                <Stats stats={stats} />\n                <Deck\n                    onSwipe={this.onSwipe.bind(this)}\n                    card={card}\n                    tick={this.state.rounds}\n                />\n                <Footer>\n                    <div className=\"time-remaining\"></div>\n                </Footer>\n            </>\n        )\n    }\n\n    getInitialState() {\n        const defaultState = this.props.worldData.defaultState\n        return {\n            world: defaultState,\n            card: this.getInitialCard(defaultState),\n            rounds: 0,\n        }\n    }\n\n    getInitialCard(world) {\n        const availableEvents = this.getAvailableEvents(world)\n        const event = this.selectNextEvent(availableEvents)\n\n        if (event) {\n            return this.selectEventCard(event.initialEventCardId)\n        } else {\n            return this.selectNextCard(\n                this.getAvailableCards(this.props.worldData.defaultState),\n            )\n        }\n    }\n\n    getAvailableCards(world) {\n        const { cards } = this.props.worldData\n        return cards.filter(c =>\n            this.hasMatchingWorldQuery(world, c.isAvailableWhen),\n        )\n    }\n\n    getAvailableEvents(world) {\n        const { events } = this.props.worldData\n        return events.filter(e =>\n            this.hasMatchingWorldQuery(world, e.shouldTriggerWhen),\n        )\n    }\n\n    hasMatchingWorldQuery(world, worldQueries) {\n        return worldQueries.some(q => this.isMatchingWorldQuery(world, q))\n    }\n\n    isMatchingWorldQuery(world, { state = {}, flags = {} }) {\n        const hasStateMatch = Object.entries(state).every(\n            ([key, [min, max]]) =>\n                world.state[key] >= min && world.state[key] <= max,\n        )\n\n        const result =\n            hasStateMatch &&\n            Object.entries(flags).every(\n                ([flag, value]) => world.flags[flag] === value,\n            )\n\n        return result\n    }\n\n    onSwipe(card, direction) {\n        const currentAction =\n            direction === SWIPE_DIRECTION.LEFT\n                ? card.actions.left\n                : card.actions.right\n\n        const updatedWorld = this.getUpdatedWorld(currentAction.modifier)\n\n        this.setState({\n            world: updatedWorld,\n            card: this.getNextCard(updatedWorld, card, currentAction),\n            rounds: this.state.rounds + 1,\n        })\n    }\n\n    getNextCard(updatedWorld, card, currentAction) {\n        const { eventCards } = this.props.worldData\n        const availableEvents = this.getAvailableEvents(updatedWorld)\n        const eventStartingNow =\n            card.type !== 'event' ? this.selectNextEvent(availableEvents) : null\n        let nextCard\n\n        const isEventCardWithPointer =\n            card.type === 'event' &&\n            typeof currentAction.nextEventCardId === 'string'\n\n        // Only select the next EventCard if a specific one is given\n        // Else cancel the event and continue with normal cards.\n        if (isEventCardWithPointer) {\n            if (!eventCards.hasOwnProperty(currentAction.nextEventCardId)) {\n                throw new Error(\n                    `eventCardId \"${currentAction.nextEventCardId}\" does not exist. Make sure it's spelled correctly`,\n                )\n            }\n            nextCard = this.selectEventCard(currentAction.nextEventCardId)\n        } else if (eventStartingNow) {\n            nextCard = this.selectEventCard(eventStartingNow.initialEventCardId)\n        } else {\n            const availableCards = this.getAvailableCards(updatedWorld)\n            nextCard = this.selectNextCard(availableCards)\n        }\n\n        return nextCard\n    }\n\n    getUpdatedWorld({ type = 'add', state = {}, flags = {} }) {\n        // get default values for missing props by destructuring the incoming `modifier` and then directly reassembling it\n        // IDEA: Could this all be done in the function declaration, when specifying parameters?\n        const modifier = { type, state, flags }\n        const updatedWorldState = this.updateWorldState(modifier)\n        const updatedWorldFlags = this.updateWorldFlags(modifier)\n\n        return {\n            state: updatedWorldState,\n            flags: updatedWorldFlags,\n        }\n    }\n\n    updateWorldState(modifier) {\n        const currentWorldState =\n            modifier.type === 'replace'\n                ? Object.assign({}, this.props.worldData.defaultState.state)\n                : Object.assign({}, this.state.world.state)\n\n        const updatedWorldState = Object.entries(modifier.state).reduce(\n            (updatedState, [key, value]) => {\n                const newValue =\n                    modifier.type === 'set' || modifier.type === 'replace'\n                        ? value\n                        : value + (updatedState[key] || 0)\n\n                updatedState[key] = Math.min(Math.max(newValue, 0), 100)\n\n                return updatedState\n            },\n            currentWorldState,\n        )\n\n        return updatedWorldState\n    }\n\n    updateWorldFlags(modifier) {\n        const currentWorldFlags =\n            modifier.type === 'replace'\n                ? Object.assign({}, this.props.worldData.flags)\n                : Object.assign({}, this.state.world.flags)\n\n        const updatedWorldFlags = Object.keys(modifier.flags).reduce(\n            (updatedFlags, key) => {\n                updatedFlags[key] = modifier.flags[key]\n                return updatedFlags\n            },\n            currentWorldFlags,\n        )\n\n        return updatedWorldFlags\n    }\n\n    addUniqueCardId(card, index = 0) {\n        return {\n            ...card,\n            id: Date.now() + ':' + index,\n        }\n    }\n\n    selectNextCard(cards = []) {\n        return this.selectRandomFrom(cards)\n    }\n\n    selectNextEvent(events = []) {\n        const event = this.selectRandomFrom(events)\n        if (event && Math.random() < event.probability) {\n            return event\n        }\n    }\n\n    selectRandomFrom(array) {\n        return array[Math.floor(Math.random() * array.length)]\n    }\n\n    selectEventCard(cardId) {\n        const { eventCards } = this.props.worldData\n        return eventCards[cardId]\n    }\n}\n","export default {\n    'end-game': {\n        image:\n            'https://images.unsplash.com/photo-1497039465987-61d305728610?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'The World Has Ended.',\n        distance: '100 miles away',\n        text:\n            'Please find a new planet to destroy, if you want to proceed. And do not try to swipe. Please.',\n        weight: 1000,\n        actions: {\n            left: {\n                modifier: {\n                    type: 'replace',\n                    state: {\n                        environment: 10,\n                        people: 10,\n                        security: 10,\n                    },\n                    flags: {},\n                },\n                nextEventCardId: null,\n            },\n            right: {\n                modifier: {\n                    type: 'replace',\n                    state: {\n                        environment: 10,\n                        people: 10,\n                        security: 10,\n                    },\n                    flags: {},\n                },\n                nextEventCardId: null,\n            },\n        },\n    },\n}\n","export default [\n    {\n        image:\n            'https://images.unsplash.com/photo-1561623002-b3520705eccf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'We need power.',\n        distance: '4 miles away',\n        text: 'Lorem ipsum COALar sit amet consectetur, adipisicing elit.',\n        weight: 1,\n        isAvailableWhen: [\n            { state: { environment: [10, 100], money: [80, 100] } },\n            { state: { people: [10, 100], money: [80, 100] } },\n            { state: { security: [10, 100], money: [80, 100] } },\n        ],\n        actions: {\n            left: {\n                modifier: {\n                    type: 'add',\n                    state: {\n                        environment: -100,\n                        people: -100,\n                        security: -100,\n                        money: -100,\n                    },\n                },\n            },\n            right: {\n                modifier: {\n                    type: 'add',\n                    state: {\n                        environment: 40,\n                        people: 60,\n                        security: 75,\n                        money: 90,\n                    },\n                },\n            },\n        },\n    },\n    {\n        image:\n            'https://images.unsplash.com/photo-1497435334941-8c899ee9e8e9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'Invest in solar?',\n        distance: '100 miles away',\n        text: 'Lorem ipsum SOLAR sit amet consectetur, adipisicing elit.',\n        weight: 1,\n        isAvailableWhen: [\n            { state: { environment: [60, 100], money: [30, 31] } },\n            { state: { people: [60, 100], money: [30, 31] } },\n            { state: { security: [60, 100], money: [30, 31] } },\n        ],\n        actions: {\n            left: {\n                modifier: {\n                    type: 'add',\n                    state: {\n                        environment: -100,\n                        people: -100,\n                        security: -100,\n                        money: -100,\n                    },\n                },\n            },\n            right: {\n                modifier: {\n                    type: 'add',\n                    state: {\n                        environment: 40,\n                        people: 60,\n                        security: 75,\n                        money: 90,\n                    },\n                },\n            },\n        },\n    },\n]\n","export default [\n    {\n        probability: 1,\n        shouldTriggerWhen: [\n            { state: { environment: [0, 0] } },\n            { state: { security: [0, 0] } },\n            { state: { money: [0, 0] } },\n            { state: { people: [0, 0] } },\n        ],\n        initialEventCardId: 'end-game',\n    },\n]\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components/macro'\n\nimport Game from './components/Game'\nimport { loadGameWorld } from './game/GameWorld'\n\nconst Container = styled.main`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100%;\n    background: #546a76;\n    display: grid;\n    grid-template-rows: minmax(50px, 80px) auto minmax(50px, 80px);\n`\n\nfunction App({ path }) {\n    const [worldData, setWorldData] = useState(null)\n    useEffect(() => {\n        const fetchWorld = async () => {\n            const worldData = await loadGameWorld(path)\n            setWorldData(worldData)\n        }\n        fetchWorld()\n    }, [path, setWorldData])\n    return <Container>{worldData && <Game worldData={worldData} />}</Container>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nconst urlParams = new URLSearchParams(window.location.search)\nconst path = urlParams.get('path') || '/data/default'\n\nReactDOM.render(<App path={path} />, document.getElementById('root'))\n"],"sourceRoot":""}