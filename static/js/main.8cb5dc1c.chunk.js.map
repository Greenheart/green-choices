{"version":3,"sources":["components/Card.js","components/Deck.js","components/Bar.js","components/Stats.js","data/cards.js","components/Game.js","App.js","index.js"],"names":["Card","this","props","i","x","y","rot","scale","trans","bind","cardData","title","distance","text","image","div","key","style","transform","interpolate","className","src","alt","width","React","Component","to","Math","random","delay","from","r","s","Deck","onSwipe","cards","useState","Set","gone","useSprings","length","cardAnimationStates","setCardAnimationState","useGesture","index","args","down","xDelta","delta","xDir","direction","velocity","dir","add","isGone","has","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","map","Container","styled","Value","getBarColor","value","Bar","backgroundColor","header","Stat","Icon","Stats","stats","environment","people","security","money","type","actions","left","modifier","right","Footer","footer","DIRECTION","Game","state","getInitialState","world","hasEnded","filter","c","card","console","log","updateWorld","checkEndgame","findNewWorldToDestroy","currentWorld","Object","assign","updated","entries","reduce","updatedState","max","min","setState","values","some","stat","main","App","ReactDOM","render","document","getElementById"],"mappings":"2TAsCeA,E,iLAlCD,IAAD,EACkDC,KAAKC,MAApDC,EADH,EACGA,EAAGC,EADN,EACMA,EAAGC,EADT,EACSA,EAAGC,EADZ,EACYA,IAAKC,EADjB,EACiBA,MAAOC,EADxB,EACwBA,MAAOC,EAD/B,EAC+BA,KAAMC,EADrC,EACqCA,SAClCC,EAAiCD,EAAjCC,MAAOC,EAA0BF,EAA1BE,SAAUC,EAAgBH,EAAhBG,KAAMC,EAAUJ,EAAVI,MAE/B,OACI,kBAAC,IAASC,IAAV,CACIC,IAAKb,EACLc,MAAO,CACHC,UAAWC,YACP,CAACf,EAAGC,IACJ,SAACD,EAAGC,GAAJ,4BAAyBD,EAAzB,cAAgCC,EAAhC,cAGR,kBAAC,IAASU,IAAV,iBACQN,EAAKN,GADb,CAEIc,MAAO,CACHC,UAAWC,YAAY,CAACb,EAAKC,GAAQC,MAEzC,yBAAKY,UAAU,QACX,yBACIC,IAAKP,GAAgB,GACrBQ,IAAKX,EACLM,MAAO,CAAEM,MAAO,UAEpB,4BAAKZ,GACL,4BAAKC,GACL,4BAAKC,U,GA3BVW,IAAMC,WCKnBC,G,MAAK,SAAAvB,GAAC,MAAK,CACbC,EAAG,EACHC,GAAQ,GAALF,EACHI,MAAO,EACPD,IAAqB,EAAhBqB,KAAKC,SACVC,MAAW,IAAJ1B,KAEL2B,EAAO,SAAA3B,GAAC,MAAK,CAAEG,IAAK,EAAGC,MAAO,IAAKF,GAAI,MAEvCG,EAAQ,SAACuB,EAAGC,GAAJ,2DACoCD,EAC1C,GAFM,wBAEYA,EAFZ,sBAE2BC,EAF3B,MAwFCC,MApFf,YAAmC,IAAnBC,EAAkB,EAAlBA,QAASC,EAAS,EAATA,MAAS,EACfC,oBAAS,kBAAM,IAAIC,OAA3BC,EADuB,sBAGuBC,YACjDJ,EAAMK,QACN,SAAArC,GAAC,sBACMuB,EAAGvB,GADT,CAEG2B,KAAMA,EAAK3B,QAPW,mBAGvBsC,EAHuB,KAGFC,EAHE,KAWxBjC,EAAOkC,aACT,YAOO,IANIC,EAML,cANFC,KAME,MALFC,EAKE,EALFA,KACQC,EAIN,cAJFC,MAIE,MAFUC,GAEV,EAHFrC,SAGE,cAFFsC,UAEE,OADFC,EACE,EADFA,SAIMC,EAAMH,EAAO,GAAK,EAAI,GAEvBH,GAJWK,EAAW,KAMvBb,EAAKe,IAAIT,GAGTV,EAAQC,EAAMS,GAAQQ,IAG1BV,GAAsB,SAAAvC,GAClB,GAAIyC,IAAUzC,EAAd,CACA,IAAMmD,EAAShB,EAAKiB,IAAIX,GAWxB,MAAO,CACHxC,EAVMkD,GACH,IAAME,OAAOC,YAAcL,EAC5BN,EACAC,EACA,EAOFzC,IALQyC,EAAS,KAAOO,EAAe,GAANF,EAAWD,EAAW,GAMvD5C,MAJUuC,EAAO,IAAM,EAKvBjB,WAAO6B,EACPC,OAAQ,CACJC,SAAU,GACVC,QAASf,EAAO,IAAMQ,EAAS,IAAM,UAK5CR,GAAQR,EAAKwB,OAAS3B,EAAMK,QAC7BuB,YACI,kBAAMzB,EAAK0B,SAAWtB,GAAsB,SAAAvC,GAAC,OAAIuB,EAAGvB,QACpD,QAKhB,OACI,yBAAKiB,UAAU,aACVqB,EAAoBwB,KAAI,WAAuB9D,GAAvB,IAAGC,EAAH,EAAGA,EAAGC,EAAN,EAAMA,EAAGC,EAAT,EAASA,IAAKC,EAAd,EAAcA,MAAd,OACrB,kBAAC,EAAD,CACIJ,EAAGA,EACHa,IAAKb,EACLC,EAAGA,EACHC,EAAGA,EACHC,IAAKA,EACLC,MAAOA,EACPC,MAAOA,EACPE,SAAUyB,EAAMhC,GAChBM,KAAMA,S,gBC/FpByD,EAAYC,IAAOpD,IAAV,iEAAGoD,CAAH,iFAQTC,EAAQD,IAAOpD,IAAV,6DAAGoD,CAAH,qFAsBX,SAASE,EAAYC,GACjB,OAAIA,GAAS,GACF,UACAA,GAAS,GACT,UAEA,UAIAC,MAvBf,YAA+B,IAAD,IAAfD,aAAe,MAAP,IAAO,EAC1B,OACI,kBAACJ,EAAD,KACI,kBAACE,EAAD,CACInD,MAAO,CACHM,MAAM,GAAD,OAAK+C,EAAL,KACLE,gBAAiBH,EAAYC,QCnB3CJ,EAAYC,IAAOM,OAAV,mEAAGN,CAAH,yGAQTO,EAAOP,IAAOpD,IAAV,8DAAGoD,CAAH,0FAOJQ,EAAOR,IAAOpD,IAAV,8DAAGoD,CAAH,yHA0CKS,MA/Bf,YAA2B,IAAVC,EAAS,EAATA,MACb,OACI,kBAAC,EAAD,KACI,kBAACH,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CAASb,KAAK,SAElB,kBAAC,EAAD,CAAKQ,MAAOO,EAAMC,eAEtB,kBAACJ,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CAAab,KAAK,SAEtB,kBAAC,EAAD,CAAKQ,MAAOO,EAAME,UAEtB,kBAACL,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CAAQb,KAAK,SAEjB,kBAAC,EAAD,CAAKQ,MAAOO,EAAMG,YAEtB,kBAACN,EAAD,KACI,kBAACC,EAAD,KACI,kBAAC,IAAD,CAAcb,KAAK,SAEvB,kBAAC,EAAD,CAAKQ,MAAOO,EAAMI,WC1DnB,GACX,CACIC,KAAM,WACNpE,MACI,qIACJH,MAAO,iBACPC,SAAU,eACVC,KAAM,6DACNsE,QAAS,CACLC,KAAM,CACFC,SAAU,CACNP,aAAc,IACdC,QAAS,IACTC,UAAW,IACXC,OAAQ,MAGhBK,MAAO,CACHD,SAAU,CACNP,YAAa,GACbC,OAAQ,GACRC,SAAU,GACVC,MAAO,OAKvB,CACIC,KAAM,WACNpE,MACI,wIACJH,MAAO,mBACPC,SAAU,iBACVC,KAAM,4DACNsE,QAAS,CACLC,KAAM,CACFC,SAAU,CACNP,aAAc,IACdC,QAAS,IACTC,UAAW,IACXC,OAAQ,MAGhBK,MAAO,CACHD,SAAU,CACNP,YAAa,GACbC,OAAQ,GACRC,SAAU,GACVC,MAAO,OAKvB,CACIC,KAAM,UACNpE,MACI,wIACJH,MAAO,uBACPC,SAAU,iBACVC,KACI,gGACJsE,QAAS,KCtDXI,EAASpB,IAAOqB,OAAV,+DAAGrB,CAAH,6DAMNsB,GACK,EAIUC,E,2MACjBC,MAAQ,EAAKC,kB,iFAGT,MAAO,CACHC,MAAO,CACHf,YAAa,GACbC,OAAQ,GACRC,SAAU,GACVC,MAAO,IAEXa,UAAU,K,+BAIR,IAAD,OACL,OACI,oCACI,kBAAC,EAAD,CAAOjB,MAAO5E,KAAK0F,MAAME,QACzB,kBAAC,EAAD,CACI7E,IAAKf,KAAK0F,MAAMG,SAChB5D,QAASjC,KAAKiC,QAAQzB,KAAKR,MAC3BkC,MAAOA,EAAM4D,QAAO,SAAAC,GAAC,OACjB,EAAKL,MAAMG,SACM,YAAXE,EAAEd,KACS,aAAXc,EAAEd,UAGhB,kBAACK,EAAD,KACI,yBAAKnE,UAAU,uB,8BAMvB6E,EAAM/C,GACQ,YAAd+C,EAAKf,MAITgB,QAAQC,IAAI,SAAUjD,EAAW+C,EAAKtF,OACtCV,KAAKmG,YACDlD,IAAcuC,EACRQ,EAAKd,QAAQC,KAAKC,SAClBY,EAAKd,QAAQG,MAAMD,UAG7BpF,KAAKoG,gBAVDpG,KAAKqG,0B,kCAaDjB,GACR,IAAMkB,EAAeC,OAAOC,OAAO,GAAIxG,KAAK0F,MAAME,OAc5Ca,EAAU,CAAEb,MAZGW,OAAOG,QAAQtB,GAAUuB,QAC1C,SAACC,EAAD,GAAiC,IAAD,mBAAhB7F,EAAgB,KAAXsD,EAAW,KAM5B,OALAuC,EAAa7F,GAAOW,KAAKmF,IACrBnF,KAAKoF,IAAIzC,EAAQuC,EAAa7F,GAAM,KACpC,GAGG6F,IAEXN,IAIJtG,KAAK+G,SAASN,K,qCAGF,IAAD,OACQF,OAAOS,OAAOhH,KAAK0F,MAAME,OAAOqB,MAC/C,SAAAC,GAAI,OAAIA,GAAQ,MAGhB3D,OAAOO,YAAW,WACd,EAAKiD,SAAS,CAAElB,UAAU,MAC3B,O,8CAIc,IAAD,OACpBtC,OAAOO,YAAW,WACd,EAAKiD,SAAS,EAAKpB,qBACpB,S,GAnFuBnE,aCb5ByC,EAAYC,IAAOiD,KAAV,oEAAGjD,CAAH,yJAmBAkD,MARf,WACI,OACI,kBAAC,EAAD,KACI,kBAAC,EAAD,QCbZC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8cb5dc1c.chunk.js","sourcesContent":["import React from 'react'\nimport { animated, interpolate } from 'react-spring/hooks'\n\nclass Card extends React.Component {\n    render() {\n        const { i, x, y, rot, scale, trans, bind, cardData } = this.props\n        const { title, distance, text, image } = cardData\n\n        return (\n            <animated.div\n                key={i}\n                style={{\n                    transform: interpolate(\n                        [x, y],\n                        (x, y) => `translate3d(${x}px,${y}px,0)`\n                    )\n                }}>\n                <animated.div\n                    {...bind(i)}\n                    style={{\n                        transform: interpolate([rot, scale], trans)\n                    }}>\n                    <div className=\"card\">\n                        <img\n                            src={image ? image : ''}\n                            alt={title}\n                            style={{ width: '100%' }}\n                        />\n                        <h2>{title}</h2>\n                        <h5>{distance}</h5>\n                        <h5>{text}</h5>\n                    </div>\n                </animated.div>\n            </animated.div>\n        )\n    }\n}\n\nexport default Card\n","import React, { useState } from 'react'\nimport { useSprings } from 'react-spring/hooks'\nimport { useGesture } from 'react-with-gesture'\n\nimport Card from './Card'\n\nimport './Deck.css'\n\nconst to = i => ({\n    x: 0,\n    y: i * -10,\n    scale: 1,\n    rot: Math.random() * 2,\n    delay: i * 100\n})\nconst from = i => ({ rot: 0, scale: 1.5, y: -1000 })\n\nconst trans = (r, s) =>\n    `perspective(1500px) rotateX(30deg) rotateY(${r /\n        10}deg) rotateZ(${r}deg) scale(${s})`\n\nfunction Deck({ onSwipe, cards }) {\n    const [gone] = useState(() => new Set())\n\n    const [cardAnimationStates, setCardAnimationState] = useSprings(\n        cards.length,\n        i => ({\n            ...to(i),\n            from: from(i)\n        })\n    )\n\n    const bind = useGesture(\n        ({\n            args: [index],\n            down,\n            delta: [xDelta],\n            distance,\n            direction: [xDir],\n            velocity\n        }) => {\n            const trigger = velocity > 0.2\n\n            const dir = xDir < 0 ? -1 : 1\n\n            if (!down && trigger) {\n                // Hide card\n                gone.add(index)\n\n                // Handle game state updates\n                onSwipe(cards[index], dir)\n            }\n\n            setCardAnimationState(i => {\n                if (index !== i) return\n                const isGone = gone.has(index)\n\n                const x = isGone\n                    ? (200 + window.innerWidth) * dir\n                    : down\n                    ? xDelta\n                    : 0\n\n                const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0)\n\n                const scale = down ? 1.1 : 1\n                return {\n                    x,\n                    rot,\n                    scale,\n                    delay: undefined,\n                    config: {\n                        friction: 50,\n                        tension: down ? 800 : isGone ? 200 : 500\n                    }\n                }\n            })\n\n            if (!down && gone.size === cards.length)\n                setTimeout(\n                    () => gone.clear() || setCardAnimationState(i => to(i)),\n                    600\n                )\n        }\n    )\n\n    return (\n        <div className=\"deck-root\">\n            {cardAnimationStates.map(({ x, y, rot, scale }, i) => (\n                <Card\n                    i={i}\n                    key={i}\n                    x={x}\n                    y={y}\n                    rot={rot}\n                    scale={scale}\n                    trans={trans}\n                    cardData={cards[i]}\n                    bind={bind}\n                />\n            ))}\n        </div>\n    )\n}\n\nexport default Deck\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nconst Container = styled.div`\n    margin-top: 10px;\n    width: 40px;\n    height: 8px;\n    border-radius: 4px;\n    background: #546a76;\n`\n\nconst Value = styled.div`\n    position: relative;\n    top: 1px;\n    left: 1px;\n    height: 6px;\n    max-width: 38px;\n    border-radius: 3px;\n`\n\nfunction Bar({ value = 100 }) {\n    return (\n        <Container>\n            <Value\n                style={{\n                    width: `${value}%`,\n                    backgroundColor: getBarColor(value)\n                }}\n            />\n        </Container>\n    )\n}\n\nfunction getBarColor(value) {\n    if (value <= 30) {\n        return '#dd7373'\n    } else if (value <= 70) {\n        return '#e7e247'\n    } else {\n        return '#91c779'\n    }\n}\n\nexport default Bar\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport { IoIosPeople } from 'react-icons/io'\nimport { GiAk47, GiMoneyStack, GiWheat } from 'react-icons/gi'\n\nimport Bar from './Bar'\n\nconst Container = styled.header`\n    background: #f6fbf5;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n`\n\nconst Stat = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: column;\n`\n\nconst Icon = styled.div`\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background: #91c779;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nfunction Stats({ stats }) {\n    return (\n        <Container>\n            <Stat>\n                <Icon>\n                    <GiWheat size=\"80%\" />\n                </Icon>\n                <Bar value={stats.environment} />\n            </Stat>\n            <Stat>\n                <Icon>\n                    <IoIosPeople size=\"80%\" />\n                </Icon>\n                <Bar value={stats.people} />\n            </Stat>\n            <Stat>\n                <Icon>\n                    <GiAk47 size=\"80%\" />\n                </Icon>\n                <Bar value={stats.security} />\n            </Stat>\n            <Stat>\n                <Icon>\n                    <GiMoneyStack size=\"80%\" />\n                </Icon>\n                <Bar value={stats.money} />\n            </Stat>\n        </Container>\n    )\n}\n\nexport default Stats\n","export default [\n    {\n        type: 'decision',\n        image:\n            'https://images.unsplash.com/photo-1561623002-b3520705eccf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'We need power.',\n        distance: '4 miles away',\n        text: 'Lorem ipsum COALar sit amet consectetur, adipisicing elit.',\n        actions: {\n            left: {\n                modifier: {\n                    environment: -100,\n                    people: -100,\n                    security: -100,\n                    money: -100\n                }\n            },\n            right: {\n                modifier: {\n                    environment: 40,\n                    people: 60,\n                    security: 75,\n                    money: 90\n                }\n            }\n        }\n    },\n    {\n        type: 'decision',\n        image:\n            'https://images.unsplash.com/photo-1497435334941-8c899ee9e8e9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'Invest in solar?',\n        distance: '100 miles away',\n        text: 'Lorem ipsum SOLAR sit amet consectetur, adipisicing elit.',\n        actions: {\n            left: {\n                modifier: {\n                    environment: -100,\n                    people: -100,\n                    security: -100,\n                    money: -100\n                }\n            },\n            right: {\n                modifier: {\n                    environment: 40,\n                    people: 60,\n                    security: 75,\n                    money: 90\n                }\n            }\n        }\n    },\n    {\n        type: 'endgame',\n        image:\n            'https://images.unsplash.com/photo-1497039465987-61d305728610?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'The World Has Ended.',\n        distance: '100 miles away',\n        text:\n            'Please find a new planet to destroy, if you want to proceed. And do not try to swipe. Please.',\n        actions: {}\n    }\n]\n","import React, { Component } from 'react'\nimport styled from 'styled-components/macro'\n\nimport Deck from './Deck'\nimport Stats from './Stats'\nimport cards from '../data/cards.js'\n\nconst Footer = styled.footer`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst DIRECTION = {\n    LEFT: -1,\n    RIGHT: 1\n}\n\nexport default class Game extends Component {\n    state = this.getInitialState()\n\n    getInitialState() {\n        return {\n            world: {\n                environment: 40,\n                people: 60,\n                security: 75,\n                money: 90\n            },\n            hasEnded: false\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Stats stats={this.state.world} />\n                <Deck\n                    key={this.state.hasEnded}\n                    onSwipe={this.onSwipe.bind(this)}\n                    cards={cards.filter(c =>\n                        this.state.hasEnded\n                            ? c.type === 'endgame'\n                            : c.type === 'decision'\n                    )}\n                />\n                <Footer>\n                    <div className=\"time-remaining\"></div>\n                </Footer>\n            </>\n        )\n    }\n\n    onSwipe(card, direction) {\n        if (card.type === 'endgame') {\n            this.findNewWorldToDestroy()\n            return\n        }\n        console.log('swipe ', direction, card.title)\n        this.updateWorld(\n            direction === DIRECTION.LEFT\n                ? card.actions.left.modifier\n                : card.actions.right.modifier\n        )\n\n        this.checkEndgame()\n    }\n\n    updateWorld(modifier) {\n        const currentWorld = Object.assign({}, this.state.world)\n\n        const updatedWorld = Object.entries(modifier).reduce(\n            (updatedState, [key, value]) => {\n                updatedState[key] = Math.max(\n                    Math.min(value + updatedState[key], 100),\n                    0\n                )\n\n                return updatedState\n            },\n            currentWorld\n        )\n\n        const updated = { world: updatedWorld }\n        this.setState(updated)\n    }\n\n    checkEndgame() {\n        const isGameLost = Object.values(this.state.world).some(\n            stat => stat <= 0\n        )\n        if (isGameLost) {\n            window.setTimeout(() => {\n                this.setState({ hasEnded: true })\n            }, 600)\n        }\n    }\n\n    findNewWorldToDestroy() {\n        window.setTimeout(() => {\n            this.setState(this.getInitialState())\n        }, 600)\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport Game from './components/Game'\n\nconst Container = styled.main`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100%;\n    background: #546a76;\n    display: grid;\n    grid-template-rows: minmax(50px, 80px) auto minmax(50px, 80px);\n`\n\nfunction App() {\n    return (\n        <Container>\n            <Game />\n        </Container>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}