{"version":3,"sources":["components/Card.js","components/Deck.js","components/Bar.js","components/Stats.js","data/cards.js","components/Game.js","App.js","index.js"],"names":["to","i","x","y","scale","rot","Math","random","delay","from","trans","r","s","Card","cardData","onSwipe","title","distance","text","image","useSpring","cardAnimationState","setCardAnimationState","useState","isGone","isGoneState","bind","useGesture","args","down","xDelta","delta","velocity","direction","threshold","min","window","innerWidth","trigger","abs","devicePixelRatio","dir","sign","setTimeout","undefined","config","friction","tension","div","key","style","transform","interpolate","className","src","alt","width","Deck","cards","map","card","id","Container","styled","Value","getBarColor","value","Bar","backgroundColor","header","Stat","Icon","Stats","stats","size","environment","people","security","money","type","actions","left","modifier","right","Footer","footer","DIRECTION","GAMESTATE","Game","state","getInitialState","world","this","generateCards","filter","c","hasEnded","updatedWorld","updateWorld","isGameLost","checkEndgame","updated","length","setState","findNewWorldToDestroy","currentWorld","Object","assign","entries","reduce","updatedState","max","values","some","stat","cardList","index","Date","now","Component","main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a08afdc6.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport { animated, interpolate } from 'react-spring/hooks'\nimport { useSpring } from 'react-spring/hooks'\nimport { useGesture } from 'react-with-gesture'\n\nconst to = i => ({\n    x: 0,\n    y: i * -10,\n    scale: 1,\n    rot: Math.random() * 2,\n    delay: i * 100\n})\nconst from = i => ({ rot: 0, scale: 1.5, y: -1000 })\n\nconst trans = (r, s) =>\n    `perspective(1500px) rotateX(30deg) rotateY(${r /\n        10}deg) rotateZ(${r}deg) scale(${s})`\n\nfunction Card({ i, cardData, onSwipe }) {\n    const { title, distance, text, image } = cardData\n\n    const [cardAnimationState, setCardAnimationState] = useSpring(() => ({\n            ...to(i),\n            from: from(i)\n        })\n    )\n    \n    const [isGoneState] = useState({isGone: false});\n\n    const bind = useGesture(\n        ({\n            args: [index],\n            down,\n            delta: [xDelta],\n            distance,\n            direction: [xDir],\n            velocity\n        }) => {\n            const threshold = Math.min(200, window.innerWidth / 2)\n            const trigger = Math.abs(xDelta) * window.devicePixelRatio > threshold\n            const dir = Math.sign(xDelta)\n\n            if (!down && trigger && !isGoneState.isGone) {\n                // Handle game state updates\n                isGoneState.isGone = true;\n                window.setTimeout(() => {\n                    onSwipe(cardData, dir)\n                }, 600)\n            }\n            const isGone = isGoneState.isGone;\n\n            const x = isGone\n                    ? (200 + window.innerWidth) * dir\n                    : down\n                    ? xDelta\n                    : 0\n\n            const rot = xDelta / 100 + (isGone ? dir * 10 * velocity : 0)\n            const scale = down ? 1.1 : 1\n            \n            const animationState = {\n                x,\n                rot,\n                scale,\n                delay: undefined,\n                config: {\n                    friction: 50,\n                    tension: down ? 800 : isGone ? 200 : 500\n                }\n            }\n\n            setCardAnimationState(animationState)\n        }\n    )\n\n    const { x, y, rot, scale } = cardAnimationState\n\n    return (\n        <animated.div\n            key={i}\n            style={{\n                transform: interpolate(\n                    [x, y],\n                    (x, y) => `translate3d(${x}px,${y}px,0)`\n                )\n            }}>\n            <animated.div\n                {...bind(i)}\n                style={{\n                    transform: interpolate([rot, scale], trans)\n                }}>\n                <div className=\"card\">\n                    <img\n                        src={image ? image : ''}\n                        alt={title}\n                        style={{ width: '100%' }}\n                    />\n                    <h2>{title}</h2>\n                    <h5>{distance}</h5>\n                    <h5>{text}</h5>\n                </div>\n            </animated.div>\n        </animated.div>\n    )\n}\n\nexport default Card\n","import React from 'react'\n\nimport Card from './Card'\nimport './Deck.css'\n\nfunction Deck({ onSwipe, cards }) {\n    return (\n        <div className=\"deck-root\">\n            {cards.map((card, i) => (\n                <Card\n                    i={i}\n                    key={card.id}\n                    cardData={card}\n                    onSwipe={onSwipe}\n                />\n            ))}\n        </div>\n    )\n}\n\nexport default Deck\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nconst Container = styled.div`\n    margin-top: 10px;\n    width: 40px;\n    height: 8px;\n    border-radius: 4px;\n    background: #546a76;\n`\n\nconst Value = styled.div`\n    position: relative;\n    top: 1px;\n    left: 1px;\n    height: 6px;\n    max-width: 38px;\n    border-radius: 3px;\n`\n\nfunction Bar({ value = 100 }) {\n    return (\n        <Container>\n            <Value\n                style={{\n                    width: `${value}%`,\n                    backgroundColor: getBarColor(value)\n                }}\n            />\n        </Container>\n    )\n}\n\nfunction getBarColor(value) {\n    if (value <= 30) {\n        return '#dd7373'\n    } else if (value <= 70) {\n        return '#e7e247'\n    } else {\n        return '#91c779'\n    }\n}\n\nexport default Bar\n","import React from 'react'\nimport styled from 'styled-components/macro'\nimport { IoIosPeople } from 'react-icons/io'\nimport { GiAk47, GiMoneyStack, GiWheat } from 'react-icons/gi'\n\nimport Bar from './Bar'\n\nconst Container = styled.header`\n    background: #f6fbf5;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-evenly;\n    align-items: center;\n`\n\nconst Stat = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    flex-direction: column;\n`\n\nconst Icon = styled.div`\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    background: #91c779;\n\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nfunction Stats({ stats }) {\n    return (\n        <Container>\n            <Stat>\n                <Icon>\n                    <GiWheat size=\"80%\" />\n                </Icon>\n                <Bar value={stats.environment} />\n            </Stat>\n            <Stat>\n                <Icon>\n                    <IoIosPeople size=\"80%\" />\n                </Icon>\n                <Bar value={stats.people} />\n            </Stat>\n            <Stat>\n                <Icon>\n                    <GiAk47 size=\"80%\" />\n                </Icon>\n                <Bar value={stats.security} />\n            </Stat>\n            <Stat>\n                <Icon>\n                    <GiMoneyStack size=\"80%\" />\n                </Icon>\n                <Bar value={stats.money} />\n            </Stat>\n        </Container>\n    )\n}\n\nexport default Stats\n","export default [\n    {\n        type: 'decision',\n        image:\n            'https://images.unsplash.com/photo-1561623002-b3520705eccf?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'We need power.',\n        distance: '4 miles away',\n        text: 'Lorem ipsum COALar sit amet consectetur, adipisicing elit.',\n        actions: {\n            left: {\n                modifier: {\n                    environment: -100,\n                    people: -100,\n                    security: -100,\n                    money: -100\n                }\n            },\n            right: {\n                modifier: {\n                    environment: 40,\n                    people: 60,\n                    security: 75,\n                    money: 90\n                }\n            }\n        }\n    },\n    {\n        type: 'decision',\n        image:\n            'https://images.unsplash.com/photo-1497435334941-8c899ee9e8e9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'Invest in solar?',\n        distance: '100 miles away',\n        text: 'Lorem ipsum SOLAR sit amet consectetur, adipisicing elit.',\n        actions: {\n            left: {\n                modifier: {\n                    environment: -100,\n                    people: -100,\n                    security: -100,\n                    money: -100\n                }\n            },\n            right: {\n                modifier: {\n                    environment: 40,\n                    people: 60,\n                    security: 75,\n                    money: 90\n                }\n            }\n        }\n    },\n    {\n        type: 'endgame',\n        image:\n            'https://images.unsplash.com/photo-1497039465987-61d305728610?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=800&q=60',\n        title: 'The World Has Ended.',\n        distance: '100 miles away',\n        text:\n            'Please find a new planet to destroy, if you want to proceed. And do not try to swipe. Please.',\n        actions: {}\n    }\n]\n","import React, { Component } from 'react'\nimport styled from 'styled-components/macro'\n\nimport Deck from './Deck'\nimport Stats from './Stats'\nimport cardList from '../data/cards.js'\n\nconst Footer = styled.footer`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nconst DIRECTION = {\n    LEFT: -1,\n    RIGHT: 1\n}\n\nconst GAMESTATE = {\n    ENDGAME: 'endgame',\n}\n\nexport default class Game extends Component {\n    state = this.getInitialState()\n\n    getInitialState() {\n        return {\n            world: {\n                environment: 40,\n                people: 60,\n                security: 75,\n                money: 90\n            },\n            cards: this.generateCards().filter(c => c.type !== GAMESTATE.ENDGAME),\n            hasEnded: false\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <Stats stats={this.state.world} />\n                <Deck\n                    onSwipe={this.onSwipe.bind(this)}\n                    cards={this.state.cards}\n                />\n                <Footer>\n                    <div className=\"time-remaining\"></div>\n                </Footer>\n            </>\n        )\n    }\n\n    onSwipe(card, direction) {\n        if (card.type === GAMESTATE.ENDGAME) {\n            this.findNewWorldToDestroy()\n            return\n        }\n\n        const updatedWorld = this.updateWorld(\n            direction === DIRECTION.LEFT\n                ? card.actions.left.modifier\n                : card.actions.right.modifier\n        )\n\n        const isGameLost = this.checkEndgame(updatedWorld)\n        const cards = this.state.cards.filter(c => c !== card);\n\n        const updatedCards = isGameLost\n            ? this.generateCards().filter(c => c.type === GAMESTATE.ENDGAME)\n            : cards.length === 0\n            ? this.generateCards().filter(c => c.type !== GAMESTATE.ENDGAME)\n            : cards\n\n        const updated = {\n            world: updatedWorld,\n            hasEnded: isGameLost,\n            cards: updatedCards\n        }\n        this.setState(updated)\n    }\n\n    updateWorld(modifier) {\n        const currentWorld = Object.assign({}, this.state.world)\n\n        const updatedWorld = Object.entries(modifier).reduce(\n            (updatedState, [key, value]) => {\n                updatedState[key] = Math.max(\n                    Math.min(value + updatedState[key], 100),\n                    0\n                )\n\n                return updatedState\n            },\n            currentWorld\n        )\n\n        return updatedWorld;\n    }\n\n    checkEndgame(world) {\n        const isGameLost = Object.values(world).some(\n            stat => stat <= 0\n        )\n        return isGameLost;\n    }\n\n    findNewWorldToDestroy() {\n        this.setState(this.getInitialState())\n    }\n\n    generateCards() {\n        return cardList.map((card, index) => ({\n            ...card,\n            id: Date.now() + \":\" + index\n        }))\n    }\n}\n","import React from 'react'\nimport styled from 'styled-components/macro'\n\nimport Game from './components/Game'\n\nconst Container = styled.main`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100%;\n    background: #546a76;\n    display: grid;\n    grid-template-rows: minmax(50px, 80px) auto minmax(50px, 80px);\n`\n\nfunction App() {\n    return (\n        <Container>\n            <Game />\n        </Container>\n    )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n// import * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister()\n"],"sourceRoot":""}